import discord
from discord.ext import commands, tasks
import DiscordUtils

token = 'ODM5MTQ2NDIzMTMxNzAxMjc4.YJFaAQ.lD6YQsnYp9WYDR5ofDpgaENlp3U'


intents = discord.Intents.default()
intents.members = True
client = discord.Client(intents=intents)
bot = commands.Bot("!")


@bot.event
async def on_ready():
    print('O bot entrou')


@bot.command('ola')
async def on_message(message):
    await message.channel.send(f'Olá {message.author.mention} :grinning:')


@tasks.loop(minutes=4)
async def Mensagem1():
    channel = bot.get_channel(839182750673666124)
    print(f"O bot esta no canal {channel}")
    await channel.send("""Bem-vindos à Prova de Simulação de hoje \n<@&839182749452992639> Juntem-se ao canal de voz: "Sala do 20" para começarmos\n""")
    embed = discord.Embed()
    embed.description = "Clica aqui para teres acesso à prova: [aqui](https://drive.google.com/file/d/1CnHfVX8JOf8APX6JCO8MJUCrmlePKLCa/view?usp=sharing)."
    await channel.send(embed=embed)


@tasks.loop(minutes=4, seconds=10)
async def Mensagem2():
    channel = bot.get_channel(839182750673666124)
    await channel.send('-----------------------------------------------------------------------------------------------------------------------------------------------------'
                       '\nInício da prova: 9h30\n1º período até às 11h15\n2º período até às 12h00\nFinal da prova: 12h30\n'
                       '-----------------------------------------------------------------------------------------------------------------------------------------------------')


@tasks.loop(minutes=5)
async def Mensagem3():
    channel = bot.get_channel(839182750673666124)
    await channel.send('\n:alarm_clock:  Está concluído o primeiro período da prova. :alarm_clock:\n'
                       'Se ainda não terminaste, podes continuar - o segundo período termina às 11h55.\n'
                       'Se já terminaste, preenche o formulário de checkout: (link). Assim que preencheres o formulário podes ir aproveitar o sábado :wink:\n'
                       'No final do dia publicaremos no fórum um post com os links para os critérios de correção e para o formulário de avaliação. Lembra-te de submeter o formulário de avaliação até quarta-feira ao final do dia.\n'
                       'Bom trabalho e bom fim-de-semana! <@&839182749452992639> :point_up:\n'
                       '-----------------------------------------------------------------------------------------------------------------------------------------------------')


@tasks.loop(minutes=6)
async def Mensagem4():
    channel = bot.get_channel(839182750673666124)
    await channel.send('\n:alarm_clock: Está concluído o segundo período da prova. :alarm_clock:\n'
                       'Se ainda não terminaste, podes continuar até às 12h25. Se já terminaste, preenche o formulário de check-out e bom fim-de-semana!'
                       '<@&839182749452992639> :point_up:\n'
                       '-----------------------------------------------------------------------------------------------------------------------------------------------------')


@tasks.loop(minutes=7)
async def Mensagem5():
    channel = bot.get_channel(839182750673666124)
    await channel.send('\n:alarm_clock: Fim do tempo! Está concluída a prova de hoje. :alarm_clock:\n'
                       'Preenche o formulário de check-out e bom fim-de-semana!'
                       '<@&839182749452992639> :point_up:\n'
                        '-----------------------------------------------------------------------------------------------------------------------------------------------------')


@tasks.loop(hours=24)
async def ApagaMensagens(amount=5000000000000000):
    channel = bot.get_channel(839182750673666124)
    messages = []
    async for message in channel.history(limit=amount + 1):
              messages.append(message)

    await channel.delete_messages(messages)


@Mensagem1.before_loop
async def before():
    await bot.wait_until_ready()
    print("Loop Ok")


@Mensagem2.before_loop
async def before():
    await bot.wait_until_ready()


@Mensagem3.before_loop
async def before():
    await bot.wait_until_ready()


@Mensagem4.before_loop
async def before():
    await bot.wait_until_ready()


@Mensagem5.before_loop
async def before():
    await bot.wait_until_ready()
    
@ApagaMensagens.before_loop
async def before():
    await bot.wait_until_ready()
    print("Pronto para apagar")


Mensagem1.start()
Mensagem2.start()
Mensagem3.start()
Mensagem4.start()
Mensagem5.start()
ApagaMensagens.start()


bot.run(token)